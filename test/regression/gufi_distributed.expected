# Index Source Tree
$ gufi_dir2index_distributed --sbatch "sbatch" --gufi_dir2index "gufi_dir2index" 1 5 "prefix" "search2"
"search2" Already exists!
"search2" Already exists!
"search2" Already exists!
"search2" Already exists!
Splitting 4 paths into 5 groups of max size 1
    Range 0: 1 path
        directory directory
    Range 1: 1 path
        empty_directory empty_directory
    Range 2: 1 path
        leaf_directory leaf_directory
    Range 3: 1 path
        unusual#? directory , unusual#? directory ,
    Index upper directories up to and including level 0

# Query Index
$ gufi_query_distributed --sbatch "sbatch" --gufi_query "gufi_query" --threads 2 1 5 "prefix2" -S "SELECT rpath(sname, sroll) FROM vrsummary;" -E "SELECT rpath(sname, sroll) || '/' || name FROM vrpentries;"
Splitting 4 paths into 5 groups of max size 1
    Range 0: 1 path
        directory directory
    Range 1: 1 path
        empty_directory empty_directory
    Range 2: 1 path
        leaf_directory leaf_directory
    Range 3: 1 path
        unusual#? directory , unusual#? directory ,
    Query upper directories up to and including level 0
cat the following slurm job output files to get complete results:
    0
    1
    2
    3
    4

$ combine output files
$ cat slurm.fake-0.out slurm.fake-1.out slurm.fake-2.out slurm.fake-3.out slurm.fake-4.out
prefix2
prefix2/.hidden
prefix2/1KB
prefix2/1MB
prefix2/directory
prefix2/directory/executable
prefix2/directory/readonly
prefix2/directory/subdirectory
prefix2/directory/subdirectory/directory_symlink
prefix2/directory/subdirectory/repeat_name
prefix2/directory/writable
prefix2/empty_directory
prefix2/file_symlink
prefix2/leaf_directory
prefix2/leaf_directory/leaf_file1
prefix2/leaf_directory/leaf_file2
prefix2/old_file
prefix2/repeat_name
prefix2/unusual#? directory ,
prefix2/unusual#? directory ,/unusual, name?#


# Diff original index results against the combined results
$ diff <(gufi_query -S "SELECT rpath(sname, sroll) FROM vrsummary;" -E "SELECT rpath(sname, sroll) || '/' || name FROM vrpentries;" "prefix" | sort) <(cat slurm.fake-0.out slurm.fake-1.out slurm.fake-2.out slurm.fake-3.out slurm.fake-4.out | sort | sed 's/search2\/prefix/search\/prefix/g')

# Diff original index results against querying the new index from a single node
$ diff <(gufi_query -S "SELECT rpath(sname, sroll) FROM vrsummary;" -E "SELECT rpath(sname, sroll) || '/' || name FROM vrpentries;" "prefix" | sort) <(gufi_query -S "SELECT rpath(sname, sroll) FROM vrsummary;" -E "SELECT rpath(sname, sroll) || '/' || name FROM vrpentries;" "prefix2" | sort | sed 's/search2\/prefix/search\/prefix/g')

# Convert source tree to trace files
$ gufi_dir2trace_distributed --sbatch "sbatch" --gufi_dir2trace "gufi_dir2trace" -d "|" 1 5 "prefix" "traces"
Splitting 4 paths into 5 groups of max size 1
    Range 0: 1 path
        directory directory
    Range 1: 1 path
        empty_directory empty_directory
    Range 2: 1 path
        leaf_directory leaf_directory
    Range 3: 1 path
        unusual#? directory , unusual#? directory ,
    Index upper directories up to and including level 0
Index can now be created from "traces.*"

# Print contents of traces files
$ cat traces.0.0 traces.1.0 traces.2.0 traces.3.0 traces.0 | awk -F'|' '{ print $1 }'
prefix
prefix/.hidden
prefix/1KB
prefix/1MB
prefix/directory
prefix/directory/executable
prefix/directory/readonly
prefix/directory/subdirectory
prefix/directory/subdirectory/directory_symlink
prefix/directory/subdirectory/repeat_name
prefix/directory/writable
prefix/empty_directory
prefix/file_symlink
prefix/leaf_directory
prefix/leaf_directory/leaf_file1
prefix/leaf_directory/leaf_file2
prefix/old_file
prefix/repeat_name
prefix/unusual#? directory ,
prefix/unusual#? directory ,/unusual, name?#

# Diff original index results against the trace files
$ diff <(gufi_query -d " " -S "SELECT rpath(sname, sroll) FROM vrsummary;" -E "SELECT rpath(sname, sroll) || '/' || name FROM vrpentries;" "prefix" | sort | sed 's/search\///g') <(cat traces.0.0 traces.1.0 traces.2.0 traces.3.0 traces.0 | awk -F'|' '{ print $1 }' | sort)

